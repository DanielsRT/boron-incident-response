x-build-args: &common-build-args
  args:
    ELASTIC_VERSION: ${ELASTIC_VERSION}
    ELASTICSEARCH_HOST: ${ELASTICSEARCH_HOST}
    ELASTICSEARCH_SERVICE_ACCOUNT_TOKEN: ${ELASTICSEARCH_SERVICE_ACCOUNT_TOKEN}
    ELASTIC_SECURITY: ${ELASTIC_SECURITY}
    ELASTIC_SSL: ${ELASTIC_SSL}


services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:${ELASTIC_VERSION}
    container_name: elasticsearch
    restart: unless-stopped
    volumes:
      - esdata:/usr/share/elasticsearch/data/
    environment:
      - "ES_JAVA_OPTS=-Xms2g -Xmx2g"
      - node.name=soc-ingest-node
      - cluster.name=soc-ingest-cluster
      - discovery.type=single-node
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
      - xpack.security.enabled=${ELASTIC_SECURITY}
      - xpack.security.transport.ssl.enabled=${ELASTIC_SSL}
    env_file:
      - dev.env
    ports:
      - '9200:9200'
      #- '9300:9300'
    depends_on:
      - redis
    networks:
      - elk

  kibana:
    image: docker.elastic.co/kibana/kibana:${ELASTIC_VERSION}
    container_name: kibana
    environment:
      - ELASTICSEARCH_HOSTS=${ELASTICSEARCH_HOST}
      - ELASTICSEARCH_SERVICE_ACCOUNT_TOKEN=${ELASTICSEARCH_SERVICE_ACCOUNT_TOKEN}
    env_file:
      - dev.env
    ports:
      - '5601:5601'
    depends_on:
      - redis
      - elasticsearch
    networks:
      - elk

  logstash:
    image: logstash:9.0.3
    container_name: logstash
    restart: unless-stopped
    volumes:
      - ./logstash/pipeline:/usr/share/logstash/pipeline
    environment:
      - "LS_JAVA_OPTS=-Xmx256m -Xms256m"
      - xpack.monitoring.enabled=true
      - xpack.monitoring.elasticsearch.username=${ELASTIC_USERNAME}
      - xpack.monitoring.elasticsearch.password=${ELASTIC_PASSWORD}
      - xpack.monitoring.collection.interval=10s
      - ELASTICSEARCH_HOST=${ELASTICSEARCH_HOST}
      - ELASTICSEARCH_SERVICE_ACCOUNT_TOKEN=${ELASTICSEARCH_SERVICE_ACCOUNT_TOKEN}
    env_file:
      - dev.env
    depends_on:
      - redis
      - elasticsearch
    networks:
      - elk
    ports:
      - "5000:5000"    # TCP input
      - "5044:5044"    # Beats input
      - "9600:9600"    # Logstash monitoring API

  redis:
    image: redis:8.2-rc1-bookworm

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      <<: *common-build-args
    image: boron_celery_web
    command: /start
    volumes:
      - .:/app
    ports:
      - 8010:8000
    env_file:
      - dev.env
    depends_on:
      - redis
      - elasticsearch
      - logstash

  celery_worker:
    build:
      context: ./backend
      dockerfile: Dockerfile
      <<: *common-build-args
    image: boron_celery_worker
    command: /start-celeryworker
    volumes:
      - .:/app
    env_file:
      - dev.env
    depends_on:
      - redis
      - elasticsearch
      - logstash

  celery_beat:
    build:
      context: ./backend
      dockerfile: Dockerfile
      <<: *common-build-args
    image: boron_celery_beat
    command: /start-celerybeat
    volumes:
      - .:/app
    env_file:
      - dev.env
    depends_on:
      - redis
      - elasticsearch
      - logstash

volumes:
  esdata:

networks:
  elk:
    driver: bridge
