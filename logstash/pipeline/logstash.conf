input {
  tcp {
    port => 5000
    codec => json_lines

    ssl_enabled => true
    ssl_certificate => "/usr/share/logstash/config/certs/server.crt"
    ssl_key => "/usr/share/logstash/config/certs/server.key"
    ssl_certificate_authorities => "/usr/share/logstash/config/certs/ca.crt"
  }
}

filter {  
  date {
    match => [ "TimeGenerated", "ISO8601" ]
    target => "@timestamp"
    # remove the original if you donâ€™t need it:
    # remove_field => [ "TimeGenerated" ]
  }

  if [Type] == "SecurityEvent" or [Channel] == "Security" {
    fingerprint {
      source => ["EventID", "Computer", "TimeGenerated"]
      target => "[@metadata][fingerprint]"
      method => "SHA1"
      concatenate_sources => true
    }
  }

  if [IpAddress] and [IpAddress] != "" and
    !( [IpAddress] =~ /^10\./ or
       [IpAddress] =~ /^192\.168\./ or
       [IpAddress] =~ /^172\.(1[6-9]|2[0-9]|3[01])\./ or
       [IpAddress] =~ /^127\./ or
       [IpAddress] =~ /^::1/ ) {

    geoip {
      source => "IpAddress"
      target => "geo"
      fields => ["location", "city_name", "country_name", "region_name"]
    }
  }
}

output {
  elasticsearch {
    hosts => ["${ELASTICSEARCH_HOST}"]
    user => "${LOGSTASH_USERNAME}"
    password => "${LOGSTASH_PASSWORD}"
    ssl_enabled => true
    ssl_certificate_authorities => "/usr/share/logstash/config/certs/ca.crt"
    index => "security-events-v2-%{+YYYY.MM.dd}"
    # User fingerprint as document_id to dedupe
    document_id => "%{[@metadata][fingerprint]}"
    
  }

  stdout {
    codec => rubydebug
  }
}